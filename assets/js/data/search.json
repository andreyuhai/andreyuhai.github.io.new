[ { "title": "Creating a function with inputs from a file at compile time using Elixir AST", "url": "/posts/creating-a-function-with-inputs-from-a-file-at-compile-time-using-elixir-ast/", "categories": "TIL, Elixir", "tags": "elixir, elixir-ast, abstract-syntax-tree", "date": "2022-06-27 00:00:00 +0200", "snippet": "Let me fill you in on what the problem I was trying to solve was, then we can get to how I‚Äôve solved the problem by creating a function with inputs from a ‚Äúdefaults‚Äù file at compile time using Elixir‚Äôs Abstract Syntax Tree (AST).We have a CSV file that has some defaults for our business logic, the file barely changes and is not huge.The content of the file is transformed into a list of tuples using a script and the script is included in one of the modules as comments.Using this script (in an iex shell), you would get the output, which is a list of tuples, and paste it into appropriate function body, which would be used at runtime.Whenever the CSV file changes you would do the same things described above.So the script looks something like this# example CSV just in case you want to run this script.# Just copy &amp;amp; paste the values below into some CSV file.# # service_name,base_price,duration# Haircut,50,30# Manicure,50,60# Pedicure,70,90&quot;./lib/data.csv&quot;|&amp;gt; File.stream!()|&amp;gt; CSV.decode!(headers: true)|&amp;gt; Enum.map(fn row -&amp;gt; { row[&quot;service_name&quot;], row[&quot;duration&quot;], row[&quot;base_price&quot;] }end)When run, this script outputs a list of tuples shown below.[ {&quot;Haircut&quot;, &quot;30&quot;, &quot;50&quot;}, {&quot;Manicure&quot;, &quot;60&quot;, &quot;50&quot;}, {&quot;Pedicure&quot;, &quot;90&quot;, &quot;70&quot;}]You would then take the list above and put it inside one of the functions, which would be used at runtime on production for whatever logic and the final module would look something like this.defmodule Playground do # Script to use whenever necessary to # generate the body of some_important_function/0 # # &quot;/path/to/csv&quot; # |&amp;gt; File.stream!() # |&amp;gt; CSV.decode!(headers: true) # |&amp;gt; Enum.map(fn row -&amp;gt; # { # row[&quot;service_name&quot;], # row[&quot;duration&quot;], # row[&quot;base_price&quot;] # } # end) def some_important_function do [ {&quot;Haircut&quot;, &quot;30&quot;, &quot;50&quot;}, {&quot;Manicure&quot;, &quot;60&quot;, &quot;50&quot;}, {&quot;Pedicure&quot;, &quot;90&quot;, &quot;70&quot;} ] endendEverything is fine so far, except that you have to run the script manually every time the CSV file changes. It works anyway.The problem started when we wanted to translate some of the strings from the CSV file, which means we would need to wrap some of the strings with gettext/1 macro.So the outcome we want to achieve is to have some_important_function asdef some_important_function do [ {gettext(&quot;Haircut&quot;), &quot;30&quot;, &quot;50&quot;}, {gettext(&quot;Manicure&quot;), &quot;60&quot;, &quot;50&quot;}, {gettext(&quot;Pedicure&quot;), &quot;90&quot;, &quot;70&quot;} ]endWe can‚Äôt directly wrap our strings with gettext/1 in our ‚Äúscript‚Äù above because, The strings are not known at compile time, hence can‚Äôt be used with macros. Moreover, it‚Äôs just a script and it‚Äôs not actually on production.One solution would be to manually wrap the necessary strings with gettext/1 inside some_important_function/0 above. But that‚Äôs too much manual work and error prone.Solving the problem at compile time with Elixir ASTDoing some research and asking around in Elixir Slack (shout out to @lostkobrakai), I figured we could solve the problem using Elixir AST. What is the AST? An AST, acronym for Abstact Syntax Tree, is a representation of code as a data structure. This data structure is used by Elixir to run Elixir code: either by interpreting it directly: executing the commands in the AST by recursively walking it; or by compiling it: translating the AST into another format, namely BEAM bytecode instructions, which then are saved to disk as .beam files.source: botsquadWe will first read the CSV at compile time and create the tuple list, which will then be used to create an AST with gettext/1 macro used wherever necessary.Lastly we will unquote/1 this AST within our actual function body which will be used at runtime on production.Moreover, we will use @external_resource module attribute to make sure that whenever our CSV file changes our module will be recompiled, meaning that our code will always be up to date!No more running scripts manually. üéâ @external_resource Tools may use this information to ensure the module is recompiled in case any of the external resources change, see for example: mix compile.elixir. source: Hexdocsdefmodule Playground do # This way our module will be recompiled whenever # you make changes to the CSV file. # Make some changes to the CSV file and recompile to see it in action. @external_resource &quot;./lib/foo.csv&quot; # Nothing fancy here, we&#39;re just creating a list of tuples data = @external_resource |&amp;gt; File.stream!() |&amp;gt; CSV.decode!(headers: true) |&amp;gt; Enum.map(fn row -&amp;gt; { row[&quot;service_name&quot;], row[&quot;duration&quot;], row[&quot;base_price&quot;] } end) IO.inspect(data) # =&amp;gt; # [ # {&quot;Haircut&quot;, &quot;30&quot;, &quot;50&quot;}, # {&quot;Manicure&quot;, &quot;60&quot;, &quot;50&quot;}, # {&quot;Pedicure&quot;, &quot;90&quot;, &quot;70&quot;} # ] # This is where we build the AST. data_ast = Enum.map(data, fn tuple -&amp;gt; list = tuple |&amp;gt; put_elem(0, {:gettext, [], [elem(tuple, 0)]}) |&amp;gt; Tuple.to_list() {:{}, [], list} end) IO.inspect(data_ast) # =&amp;gt; # [ # {:{}, [], [{:gettext, [], [&quot;Haircut&quot;]}, &quot;30&quot;, &quot;50&quot;]}, # {:{}, [], [{:gettext, [], [&quot;Manicure&quot;]}, &quot;60&quot;, &quot;50&quot;]}, # {:{}, [], [{:gettext, [], [&quot;Pedicure&quot;]}, &quot;90&quot;, &quot;70&quot;]} # ] data_ast |&amp;gt; Macro.to_string() |&amp;gt; IO.puts() # =&amp;gt; # [ # {gettext(&quot;Haircut&quot;), &quot;30&quot;, &quot;50&quot;}, # {gettext(&quot;Manicure&quot;), &quot;60&quot;, &quot;50&quot;}, # {gettext(&quot;Pedicure&quot;), &quot;90&quot;, &quot;70&quot;} # ] # Now, this function would return the same thing # that&#39;s returned by Macro.to_string/1 above def some_important_function do unquote(data_ast) endend" }, { "title": "How do supervisors not crash when one of the children processes crashes", "url": "/posts/how-do-supervisors-not-crash-when-linked-process-crashes/", "categories": "TIL, Elixir", "tags": "elixir, supervisor, agent, genserver", "date": "2021-12-13 00:00:00 +0100", "snippet": "When you start an Agent or GenServer they will be linked to the current process and the current process will crash if the linked Agent or GenServer crashes.However Supervisors do not crash even if the child processes that are linked to the supervisor crash. Well, the answer is obvious.Because Supervisors trap the exit signals.source codeAssuming that you‚Äôve at least one child spec in your children list below, you can also confirm that doing:{:ok, supervisor} = Supervisor.start_link(children, strategy: :one_for_one)Process.info(supervisor, :trap_exit)# =&amp;gt; {:trap_exit, true}" }, { "title": "How Ecto infers field types from a changeset or a schema struct", "url": "/posts/how-does-ecto-infer-field-type-from-a-changeset-or-a-schema-struct/", "categories": "TIL, Elixir", "tags": "elixir, ecto, cast", "date": "2021-07-16 00:00:00 +0200", "snippet": "I was wondering how Ecto.Changeset.cast/4 function casts attributes from a map into their approriate types in the DB since we do not provide any information about the types explicitly.Turns out that if you are passing a schema struct to cast/4 Ecto uses the __changeset__ function on it to figure out the types of the fields. Otherwise if you are passing an Ecto.Changeset to cast/4 then Ecto uses the types field of the changeset struct.To show you what I mean, we are going to create a Phoenix app called God with only a Human schema so we can create, read, update, delete a Human (wish it was that easy lol).If you already know what I mean then you can basically skip to the breakdown.Create a Phoenix app:$ mix phx.new godAfter our project is created, and we ran mix ecto.create inside the project directory we need to generate our controller, view and context for Human to be able to CRUD Humans.‚ï∞‚îÄ$ mix phx.gen.html Creature Human humans name surname to_be_born_on:utc_datetime age_to_die_at:integer will_get_married:boolean * creating lib/god_web/controllers/human_controller.ex* creating lib/god_web/templates/human/edit.html.eex* creating lib/god_web/templates/human/form.html.eex* creating lib/god_web/templates/human/index.html.eex* creating lib/god_web/templates/human/new.html.eex* creating lib/god_web/templates/human/show.html.eex* creating lib/god_web/views/human_view.ex* creating test/god_web/controllers/human_controller_test.exs* creating lib/god/creature/human.ex* creating priv/repo/migrations/20210716083409_create_humans.exs* creating lib/god/creature.ex* injecting lib/god/creature.ex* creating test/god/creature_test.exs* injecting test/god/creature_test.exsAdd the resource to your browser scope in lib/god_web/router.ex: resources &quot;/humans&quot;, HumanControllerRemember to update your repository by running migrations: $ mix ecto.migrateBasically our Human will have a name, surname and we will also have a utc_datetime for them to_be_born_on, an age_to_die_at and finally whether they will_get_married.After we follow the instructions given after running mix phx.gen.html above we will have a working God app. :DWe‚Äôve already created (scheduled maybe?) a human to be born on 05/05/2022 at 07:07 who will sadly die at the age of 88. üéâLet‚Äôs get seriousSo when we navigate to http://localhost:4000/humans/new we get the form below to create a human.After we fill in the details in the form and click the save button, our request follows a path ofendpoint.ex -&amp;gt; router.ex -&amp;gt; HumanController.create/2Below you can see the code for HumanController.create/2 which gets run eventually,def create(conn, %{&quot;human&quot; =&amp;gt; human_params}) do case Creature.create_human(human_params) do {:ok, human} -&amp;gt; conn |&amp;gt; put_flash(:info, &quot;Human created successfully.&quot;) |&amp;gt; redirect(to: Routes.human_path(conn, :show, human)) {:error, %Ecto.Changeset{} = changeset} -&amp;gt; render(conn, &quot;new.html&quot;, changeset: changeset) endendwhich in fact calls a function Creature.create_human/1 which you can see below.def create_human(attrs \\\\ %{}) do %Human{} |&amp;gt; Human.changeset(attrs) |&amp;gt; Repo.insert()endThis function also calls Human.changeset/2 which you can see below.def changeset(human, attrs) do human |&amp;gt; cast(attrs, [:name, :surname, :to_be_born_on, :age_to_die_at, :will_get_married]) |&amp;gt; validate_required([:name, :surname, :to_be_born_on, :age_to_die_at, :will_get_married])endIf we insert a require IEx; IEx.pry() after the function head and before the function end like below,def changeset(human, attrs) do require IEx; IEx.pry() human = human |&amp;gt; cast(attrs, [:name, :surname, :to_be_born_on, :age_to_die_at, :will_get_married]) |&amp;gt; validate_required([:name, :surname, :to_be_born_on, :age_to_die_at, :will_get_married]) require IEx; IEx.pry() humanendand inspect the attrs map. We will get:pry(1)&amp;gt; attrs%{ &quot;age_to_die_at&quot; =&amp;gt; &quot;99&quot;, &quot;name&quot; =&amp;gt; &quot;John&quot;, &quot;surname&quot; =&amp;gt; &quot;Doe&quot;, &quot;to_be_born_on&quot; =&amp;gt; %{ &quot;day&quot; =&amp;gt; &quot;1&quot;, &quot;hour&quot; =&amp;gt; &quot;0&quot;, &quot;minute&quot; =&amp;gt; &quot;0&quot;, &quot;month&quot; =&amp;gt; &quot;1&quot;, &quot;year&quot; =&amp;gt; &quot;2016&quot; }, &quot;will_get_married&quot; =&amp;gt; &quot;true&quot;}As you can see all the values are of string which is what we can only get after a form submission anyway.If we also inspect the human after the piping we get the changeset below.pry(1)&amp;gt; human#Ecto.Changeset&amp;lt; action: nil, changes: %{ age_to_die_at: 99, name: &quot;John&quot;, surname: &quot;Doe&quot;, to_be_born_on: ~U[2016-01-01 00:00:00Z], will_get_married: true }, errors: [], data: #God.Creature.Human&amp;lt;&amp;gt;, valid?: true&amp;gt;The question is‚Ä¶So here, how does Ecto.Changeset.cast/4 know how to cast attributes into their DB appropriate types? We have only passed Ecto.Changeset.cast/4 a Human schema struct and a map of attributes consisting of only string values.The BreakdownThe breakdown will be two-fold. One for when you are passing a schema struct to cast/4 and the other one for when you are passing a Ecto.Changeset to cast/4.In the case, when you pass a schema struct to Ecto.Changeset.cast/4, it turns out that there‚Äôs a __changeset__ function you can call on a schema struct which will give youiex(12)&amp;gt; God.Creature.Human.__changeset__%{ age_to_die_at: :integer, id: :id, inserted_at: :naive_datetime, name: :string, surname: :string, to_be_born_on: :utc_datetime, updated_at: :naive_datetime, will_get_married: :boolean}and this __changeset__ function gets injected by a private schema/4 function which is called by schema and embedded_schema macros. You can take a look at them on GitHub.If you further inspect the Ecto.Changeset.cast/4 function which accepts a struct, you will see that the __changeset__ function is being used like so:def cast(%{__struct__: module} = data, params, permitted, opts) do cast(data, module.__changeset__(), %{}, params, permitted, opts)endIf you create your own struct and try to pass it to Ecto.Changeset.cast/4 you will obviously get an error.iex(18)&amp;gt; defmodule Foo do...(18)&amp;gt; defstruct [:name, :age]...(18)&amp;gt; end{:module, Foo, &amp;lt;&amp;lt;70, 79, 82, 49, 0, 0, 6, 152, 66, 69, 65, 77, 65, 116, 85, 56, 0, 0, 0, 180, 0, 0, 0, 18, 10, 69, 108, 105, 120, 105, 114, 46, 70, 111, 111, 8, 95, 95, 105, 110, 102, 111, 95, 95, 10, 97, 116, ...&amp;gt;&amp;gt;, %Foo{age: nil, name: nil}} iex(19)&amp;gt; Ecto.Changeset.cast(%Foo{}, %{name: &quot;Burak&quot;}, [:name])** (UndefinedFunctionError) function Foo.__changeset__/0 is undefined or private Foo.__changeset__() (ecto 3.6.2) lib/ecto/changeset.ex:489: Ecto.Changeset.cast/4In the case, when you pass an Ecto.Changeset to Ecto.Changeset.cast/4 below function gets invoked.def cast(%Changeset{changes: changes, data: data, types: types, empty_values: empty_values} = changeset, params, permitted, opts) do opts = Keyword.put_new(opts, :empty_values, empty_values) new_changeset = cast(data, types, changes, params, permitted, opts) cast_merge(changeset, new_changeset)endAs you can also see below, there‚Äôs a field called types in an Ecto.Changeset hence when you pass an Ecto.Changeset to cast/4, Ecto will use the types field to figure out how to cast attributes properly.iex(63)&amp;gt; ch = God.Creature.Human.changeset(%God.Creature.Human{}, %{name: &quot;John&quot;, surname: &quot;Doe&quot;, to_be_born_on: &quot;2022-05-05 00:00:00&quot;, age_to_die_at: &quot;99&quot;})#Ecto.Changeset&amp;lt; action: nil, changes: %{ age_to_die_at: 99, name: &quot;John&quot;, surname: &quot;Doe&quot;, to_be_born_on: ~U[2022-05-05 00:00:00Z] }, errors: [], data: #God.Creature.Human&amp;lt;&amp;gt;, valid?: true&amp;gt;iex(64)&amp;gt; ch.types%{ age_to_die_at: :integer, id: :id, inserted_at: :naive_datetime, name: :string, surname: :string, to_be_born_on: :utc_datetime, updated_at: :naive_datetime, will_get_married: :boolean}LastlyYou don‚Äôt always need a schema struct or an Ecto.Changeset to be able to use cast/4. As you can see in lib/ecto/changeset.exdef cast({data, types}, params, permitted, opts) when is_map(data) do cast(data, types, %{}, params, permitted, opts)endYou can just pass a tuple consisting of a data map and a types map which has the types of the values like so:iex(15)&amp;gt; data = %{}%{}iex(16)&amp;gt; types = %{name: :string, age: :integer, likes_elixir: :boolean}%{age: :integer, likes_elixir: :boolean, name: :string}iex(17)&amp;gt; Ecto.Changeset.cast({ %{}, types}, %{name: &quot;Burak&quot;, age: &quot;99&quot;, likes_elixir: &quot;true&quot;}, [:name, :age, :likes_elixir])#Ecto.Changeset&amp;lt; action: nil, changes: %{age: 99, likes_elixir: true, name: &quot;Burak&quot;}, errors: [], data: %{}, valid?: true&amp;gt;" }, { "title": "Lazy way to insert debugging code for Elixir in Vim", "url": "/posts/elixir-easier-way-to-insert-iex-pry-in-vim/", "categories": "TIL, Vim", "tags": "elixir, vim, iex, pry", "date": "2021-06-29 00:00:00 +0200", "snippet": "When I‚Äôm writing Elixir code, I‚Äôve been using require IEx; IEx.pry() a lot to debug my code that it became annoying having to type it all the time again and again. Hence I was thinking about a lazier way to have it inserted there in Vim and of course I was not the only one annoyed with this problem.map ,P Orequire IEx; IEx.pry()&amp;lt;ESC&amp;gt;map ,p orequire IEx; IEx.pry()&amp;lt;ESC&amp;gt;After inserting above code into your .vimrc you can basically insert pry line into your code with the keyboard shortcuts ,p and ,P. Uppercase version of the shortcut inserts the line above the current line and lowercase version inserts the line below the current line." }, { "title": "Programming Phoenix 1.4 | How do the websockets connect only on the video page", "url": "/posts/programming-phoenix-how-does-websocket-work-only-on-video-page/", "categories": "TIL, Elixir", "tags": "elixir, phoenix, websockets", "date": "2021-05-19 00:00:00 +0200", "snippet": "In the book Programming Phoenix 1.4, we are creating a web application where users can annotate YouTube videos and annotations get brodcast by WebSockets to all the users that are on the same video page. We can also see that the browser tries to connect to a socket only on the video page, namely rumbl_web/templates/watch/show.html.eex. The chapter were this topic is covered in the book is the chapter 10. I was trying to understand how we are connecting to a socket only on the video page and here is how it happens.If you take a look at assets/js/app.js, we can see that we callVideo.init(socket, document.getElementById(&quot;video&quot;))If you inspect where Video.init is defined, which is assets/js/video.js, you can see the snippet below,let Video = { init(socket, element) { if(!element) { return } let playerId = element.getAttribute(&quot;data-player-id&quot;) let videoId = element.getAttribute(&quot;data-id&quot;) socket.connect() Player.init(element.id, playerId, () =&amp;gt; { this.onReady(videoId, socket) }) },What the Video.init function does is, if the element doesn‚Äôt exist on the page we directly return without trying to connecting to the socket. However if you basically insert a div with an id video on any page, you can see that the browser will try to connect to a websocket just because we have the video element on the page.In templates/watch/show.html.eex you can see the snippet below which basically creates an element with an id of video, hence, the browser tries to connect to a socket on the video page.&amp;lt;%= content_tag :div, id: &quot;video&quot;, data: [id: @video.id, player_id: player_id(@video)] do %&amp;gt;&amp;lt;% end %&amp;gt;" }, { "title": "macOS openssl file not found while installing Ruby gems", "url": "/posts/macos-openssl-file-not-found-error-while-installing-ruby-gems/", "categories": "TIL, Ruby", "tags": "ruby, ruby-gems, macOS, jekyll", "date": "2021-05-04 00:00:00 +0200", "snippet": "While installing Ruby gems on macOS, you might encounter an error like:In file included from binder.cpp:20:./project.h:119:10: fatal error: &#39;openssl/ssl.h&#39; file not found#include &amp;lt;openssl/ssl.h&amp;gt; ^~~~~~~~~~~~~~~1 error generated.make: *** [binder.o] Error 1make failed, exit code 2Gem files will remain installed in /Users/burak/.rvm/gems/ruby-3.0.1/gems/eventmachine-1.2.7 for inspection.That was the case for me when I was trying to install jekyll gem using gem install jekyll.Solution is to do:gem install jekyll -- --with-cppflags=-I/opt/homebrew/opt/openssl/include" }, { "title": "Elixir boolean operators", "url": "/posts/elixir-operators/", "categories": "TIL, Elixir", "tags": "elixir", "date": "2021-05-04 00:00:00 +0200", "snippet": "There‚Äôs subtle difference between Elixir boolean operators. Namely between or and ||, and and &amp;amp;&amp;amp;, not and !.These operators expect true or false as their first argument:a or b # true if a is true; otherwise ba and b # false if a is false; otherwise bnot a # false if a is true; otherwise bThese operators take arguments of any type. Any value apart from nil or false is interpreted as true:a || b # a if a is truthy; otherwise ba &amp;amp;&amp;amp; b # b if a is truthy; otherwise a!a # false if a is truthy; otherwise trueExamples:iex(1)&amp;gt; 1 or 2** (BadBooleanError) expected a boolean on left-side of &quot;or&quot;, got: 1iex(1)&amp;gt; 1 || 21iex(1)&amp;gt; true or falsetrueiex(2)&amp;gt; &quot;foo&quot; and &quot;bar&quot;** (BadBooleanError) expected a boolean on left-side of &quot;and&quot;, got: &quot;foo&quot;iex(2)&amp;gt; &quot;foo&quot; &amp;amp;&amp;amp; &quot;bar&quot;&quot;bar&quot;iex(3)&amp;gt; not &quot;foo&quot;** (ArgumentError) argument error :erlang.not(&quot;foo&quot;)iex(3)&amp;gt; !&quot;foo&quot;false" }, { "title": "How to add Bootstrap to a Rails 6 project", "url": "/posts/how-to-add-bootstrap-to-rails-6/", "categories": "TIL, Ruby", "tags": "ruby, ruby-on-rails, rails-6, bootstrap", "date": "2021-03-03 00:00:00 +0100", "snippet": "Create a new Rails 6 project.$ rails new awesome-projectAdd bootstrap, popper.js and jquery using yarn.$ yarn add bootstrap popper.js jqueryCopy the snippet below into config/webpack/environment.jsconst webpack = require(&#39;webpack&#39;)environment.plugins.append(&#39;Provide&#39;, new webpack.ProvidePlugin({ $: &#39;jquery&#39;, jQuery: &#39;jquery&#39;, Rails: &#39;@rails/ujs&#39;}))Rename the application.css in app/assets/stylesheets into application.scss and copy &amp;amp; paste the snippet below.@import &#39;bootstrap/scss/bootstrap&#39;;" }, { "title": "Ruby notes worth noting", "url": "/posts/ruby-notes/", "categories": "TIL, Ruby", "tags": "ruby, notes", "date": "2020-06-20 00:00:00 +0200", "snippet": "Here I am going to keep my Ruby notes that I‚Äôve found useful and would like to read again in the future with their links to the source.Class Methods While some object oriented languages have class structures that support both instance methods and class methods (sometimes called static methods), Ruby only supports instance methods. If Ruby only supports instance methods where do all those class methods you‚Äôve been creating end up? Why, the singleton class of course!1References Understanding Ruby Singleton Classes - Devalot¬†&amp;#8617; " }, { "title": "Coursera machine learning exercise 4 predicting your handwriting", "url": "/posts/coursera-machine-learning-predicting-your-handwriting/", "categories": "TIL, MATLAB", "tags": "octave, matlab, machine-learning, multiclass-classifiers", "date": "2019-09-25 00:00:00 +0200", "snippet": "I‚Äôve been studying Andrew Ng‚Äôs machine learning course on Coursera for a while now. I‚Äôve just finished 4th week assignment which is about training multiclass classifiers and using already trained neural networks to predict handwritten digits.The classifiers are trained on 5000 20x20 grayscale images.After I‚Äôve completed the assignment, I was wondering whether I could predict my own handwriting using the trained classifiers.How to predict your own handwriting?To predict your own handwriting successfully, you should make sure you follow these two guidelines below that I‚Äôve figured out by trial and error and also asking on discussion forum: The size of the digit in the image should not be too big or too small. The background pixels should be a consistent shade of gray for almost every pixel or should be as consistent as possible, not to mention that the digit pixels should be white :).How do I make my background a shade of gray and the digit white?Of course, it is difficult to find a gray paper and a white pen to ensure the guideline above. Instead we will use a light colored paper (I‚Äôve used a yellow post-it) and a black or blue pen, then we will map our pixel values between 0 and 1 (considering the quoted tip below) after converting our image to grayscale in MATLAB which will result in the background being gray and the digit being white.I will explain this mapping process in detail in this post as well. The image pixels are scaled (or normalized) so that -1.0 is black, 0.0 is grey, and +1.0 is white. However, nearly all of the pixels are in the 0.0 to +1.0 range. The backgrounds are grey, and the image ‚Äúpen strokes‚Äù are white.1Predicting your own handwritingAfter you write down a digit on a paper, take a photo of it and upload it to your computer, you will first read the image in MATLAB.I will use the image below for predicting my handwriting and then, at the end of this post, I will share a few more images of different digits that I‚Äôve successfully predicted so you can try to predict them on your own, if you would like to, or just try your own handwriting since that‚Äôs what this post is about, haha. % Reading the imageimg = imread(&#39;/path/to/digit_five.jpg&#39;);% Converting RGB img to grayscaleimg = rgb2gray(img);% Resizing it to be 20x20img = imresize(img, [20, 20]);% Display imgimshow(img)Now you should see your 20x20 grayscale image, or maybe you can‚Äôt because it is too small, haha. You can display before resizing anyway.But there is a problemIn the image, our background color is close to white and the digit is black contrary to images in the dataset, also our pixel values are between 0 and 255 whereas pixel values of images in the dataset are between 0 and 1 roughly (-0.1320 and 1.1277 actually).This is where we should map our pixel values to comply with the images in the dataset.To better visualize the problem that I‚Äôve explained above take a look at the image below where I‚Äôve compared the image of my handwriting and a random image from the dataset. As you can see from the image, we need to map our pixel values between 0 and 1 so that our image will comply with pixel values of images in the dataset which are all between 0 and 1 roughly.Moreover we need to cross map our pixel values (I‚Äôve just made up this term, just please correct me in the comments) meaning that we need to map a pixel value of 0 from our own image to 1 so that our black pixels will turn white and we should map a pixel value of 255 to 0 so that our white pixels will turn gray, in other words, this process will turn our digit white and our background gray which is exactly what we want to achieve.Finally! The mapping part If your number X falls between A and B, and you would like Y to fall between C and D, you can apply the following linear transform:2 Y = (X-A)/(B-A) * (D-C) + Cwhich is the same as :new_value = (old_value - old_bottom) / (old_top - old_bottom) * (new_top - new_bottom) + new_bottom; Using the formula above we will map all our pixels. Instead of using 255 and 0 as the old_top and old_bottom, I‚Äôve assumed the minimum value in my image matrix to be my old_bottom and maximum to be my old_top.absolute_max = max(img(:)); % 192 which is B in the formula or old_topabsolute_min = min(img(:)); % 104 which is A in the formula or old_bottomIn other words, I‚Äôve assumed the minimum pixel value in my image to be black and the maximum pixel value to be white because this way I can map my pixel values to get my digit white and the background gray. Take a look at the image below to see the difference. Our new_top will be 0 and new_bottom will be 1 as we want our white color to turn gray and gray to turn white.% Mapping pixel valuesnew_top = 0;new_bottom = 1;% Before mapping, we need to cast our img to double to get precision% because now it is of type uint8 which will not give us any precision% which might cause all our pixel values being 1s or 0s% when we divide our img matriximg = double(img);mapped_img = (img - absolute_min) / (absolute_max - absolute_min) * (new_top - new_bottom) + new_bottom;After this mapping process, we can finally use displayData function to display our image.displayData(mapped_img(:)&#39;);Which will display the image below. We can now try to predict our handwriting using predictOneVsAll with already trained classifiers all_theta.predictOneVsAll(all_theta, mapped_img(:)&#39;) Oops! Something went wrong.Well, actually nothing went wrong for this particular image. As I‚Äôve mentioned at the beginning of my post. This prediction relies on the background color and its consistency through background pixels, so if you are trying your own handwriting you might not have gotten the background color right, but this might not be the only reason.What should I do then?After I‚Äôve tried to predict all the digits in different sizes and colors on post-its without fiddling with the pixel values. I‚Äôve decided to fiddle with the pixel values to see whether I can get the background color right and predict the digit successfully.I‚Äôve come up with the function below which maps the pixel values in the image matrix (so you don‚Äôt need to map pixel values manually) and increments all pixel values gradually trying to predict the digit with the incremented pixel values. This way we are trying to get the background color right so that we can predict the digit successfully. Once it predicts the digit right, the function returns the number that has been added to mapped pixel values which helped us predict the digit correctly, otherwise -1 is returned.% This function tries to find the right value which makes the % background color the closest to the one in the dataset images% so that our &quot;predictOneVsAll&quot; function can predict our handwriting correctly.% If predicted correctly with the number by which the pixel values are incremented,% the number returned. -1 otherwise.% img: 20x20 grayscale image cast to double().% all_theta: theta values for classifiers from the exercise% y: the actual value that is to be predicted in the image, in this case it is 5.function p = findRightBgColor(img, all_theta, y) % Get max value from the image matrix max_value = max(img(:)); % Get min value from the image matrix min_value = min(img(:)); % Set p -1 in case we can&#39;t predict the digit successfully so the function returns -1 p = -1; % Map pixel values between 0 and 1 mapped_img = (img - min_value) / (max_value - min_value) * (-1) + 1; % Increment the mapped image matrix % by adding all the values from -0.9 to 1 with a step size of 0.01 for i = -0.9:0.01:1 % Increment by i temp = mapped_img + i; % Try to predict the new image matrix with incremented pixel values prediction = predictOneVsAll(all_theta, temp(:)&#39;); % If predicted successfully if prediction == y % Set p to the number that has been added to all pixel values p = i; break; end endendSo let‚Äôs see whether we can get the background color right using this function.% Read the imageimg = imread(&#39;/path/to/digit_five.jpg&#39;);% Convert RGB to grayscaleimg = rgb2gray(img);% Resize the image to be 20x20img = imresize(img, [20, 20])% Convert the image matrix from uint8 to double% so that we can get precision when we map% or when we divide our pixel values.img = double(img);% Calling our function to find the right background color.findRightBgColor(img, all_theta, 5)Which returns: -0.3900 means that we need to sum all our pixel values in our img matrix with -0.3900 so that we will get the right background color for prediction.Finally predicting!% Read the imageimg = imread(&#39;/path/to/digit_five.jpg&#39;);% Convert RGB to grayscaleimg = rgb2gray(img);% Resize the image to be 20x20img = imresize(img, [20, 20])% Convert the image matrix from uint8 to double% so that we can get precision when we map% or when we divide our pixel values.img = double(img);% Get min and max values for mappingmin_val = min(img(:));max_val = max(img(:));% Map pixel valuesmapped_img = (img - min_val) / (max_val - min_val) * (0 - 1) + 1;% Add -0.3900 to all pixel valuesincr_mapped_img = mapped_img + (-0.3900)% Display mapped_img and incremented_mapped_img % side by side so you can see the difference in backgroundsfigure;% Divide the figure into 1x2 grid and select the first one.subplot(1,2,1);% Display mapped_img on the first griddisplayData(mapped_img(:)&#39;);% Set the title of mapped_imgtitle({&#39;mapped__img&#39;, &#39;which is not incremented by -0.39&#39;, &#39;which we couldn&#39;&#39;t predict successfully &#39;})% Select the second gridsubplot(1,2,2);% Display incr_mapped_img on the second grid displayData(incr_mapped_img(:)&#39;);% Set the title of incr_mapped_imgtitle({&#39;incr__mapped__img&#39;, &#39;which is incremented by -0.39&#39;, &#39;which we predicted successfully &#39;})% Now you can see two different images% side by side for comparison of their backgrounds.% I&#39;ve also added a screenshot of these two images below. Now that we‚Äôve done everything let‚Äôs try to predict the digit in our incr_mapped_imgpredictOneVsAll(all_theta, incr_mapped_img)Which will return: Other handwritten digitsIn case you want to test, here are some other handwritten digits by me that I could successfully predict using the technique above. References Tips for classifying your own images - ML:Programming Exercise 4:Neural Networks Learning¬†&amp;#8617; Mapping numbers - Stack Overflow¬†&amp;#8617; " }, { "title": "Understanding the function surf() in Octave/MATLAB", "url": "/posts/understanding-the-function-surf-in-octave-matlab/", "categories": "TIL, MATLAB", "tags": "octave, matlab, plot, surf", "date": "2019-07-20 00:00:00 +0200", "snippet": "I‚Äôve been studying Machine Learning for a few days now, on Coursera. After finishing 1st and 2nd weeks, I‚Äôve got the first assignment for the course where you are supposed to implement Linear Regression using Gradient Descent.While trying to do the assignment, I‚Äôve come across with a function, surf(), for which I‚Äôve struggled a few hours a little bit to understand.What was confusing for me in the assignment was this line below: Because of the way meshgrids work in the surf() command, we need to transpose J_vals before calling surf, or else the axes will be flipped.J_vals = J_vals&#39;;I couldn‚Äôt get that at first glance, so I‚Äôve started fiddling with the function and plots until a few hours later I‚Äôve found this explanation from the docs1. If x and y are vectors, then a typical vertex is (x(j), y(i), z(i,j)).Thus, columns of z correspond to different x values and rows of z correspond to different y values.Take home message: Always check for the docs FIRST. ¬Ø_(„ÉÑ)_/¬ØAnyway, to visualize this I‚Äôve plotted a graph using the code below:A = [1 2 3 4 5 6];B = [7 8 9 10 11 12];C = magic(6);% Matrix C:% 35 1 6 26 19 24% 3 32 7 21 23 25% 31 9 2 22 27 20% 8 28 33 17 10 15% 30 5 34 12 14 16% 4 36 29 13 18 11surf(A, B, C) By the way, I should mention that in the assignment we were assigning the elements of the matrix C (which corresponds to J_vals in the snippet below) like:% theta0_vals is a 1x100 row vector, which in our case is the matrix A% theta1_vals is a 1x100 row vector, which in our case is the matrix Bfor i = 1:length(theta0_vals) for j = 1:length(theta1_vals) t = [theta0_vals(i); theta1_vals(j)]; J_vals(i,j) = computeCost(X, y, t); endendIn the above code, we are assigning the result of the computation from Ai and Bj to Ci,j.So you can think of it as Ci,j = (Ai, Bj).Considering the explanation above, after using surf(A, B, C) you might think that C(A(1), B(3)) which is C(1,9) should be equal to C1,3 which is 6.But as you can see from the above surface plot, the point (1, 9) maps to 31 or you can use interp2(A, B, C, 1, 9) which will give you the same result.Hence, we take the transpose of the matrix C:surf(A, B, C&#39;)to get : References GNU Octave - surface()¬†&amp;#8617; " }, { "title": "How to scroll down a div with dynamic content in Ruby using Watir", "url": "/posts/how-to-scroll-down-a-div-with-dynamic-content-in-ruby-using-watir/", "categories": "TIL, Ruby", "tags": "ruby, watir, dynamic-content", "date": "2018-09-08 00:00:00 +0200", "snippet": "Explaining how to scroll down a div with dynamic content as long as there is more content to show and also some stuff like scrollHeight, scrollTop and clientHeight.Take me right there!I was trying to create a simple Instagram bot in Ruby using Watir gem. There are of course lots of open source Instagram bots already in GitHub. But I wanted to see if I could write something similar which I thought would be fun.One thing I wanted to figure out was how to unfollow non-followers. This feature is a little bit tedious, because, since I am not using any Instagram APIs, if I wanted to unfollow non-followers (I love to say this!) I would need to know the usernames of the people following me and the ones I am following. Then all I need to do is just compare the two arrays (the ones following me and the ones I am following) and extract the ones I am following and also who are not following me into another array (I know this got really confusing). Then just unfollow them, right? To do the above method using Watir gem in Ruby, I just first navigate to user‚Äôs Instagram profile, then click on followers. But Instagram doesn‚Äôt load all of your followers at once. You need to keep scrolling down as long as there are more followers to show as in the gif above. So you can do the math of the waiting time if you had around even 1k followers which is exactly why I said ‚Äútedious‚Äù.So I was trying to implement something that keeps scrolling down until you hit the bottom eventually then get all the followers (or your followings) into an array.My first attempt was to get the follower count from the profile page and then approximate how many times I would need to scroll down (control + end) the followers dialog window page.# Navigate to user&#39;s page browser.goto &quot;https://www.instagram.com/#{username}&quot; # Get the follower count follower_count = browser.a(href: &quot;/#{username}/followers/&quot;).text.to_i # Click the followers button sleep(3) browser.a(href: &quot;/#{username}/followers/&quot;).click # Focus on the followers dialog window sleep(1) browser.div(class: &#39;j6cq2&#39;).focus # I figured instagram loads around 10 followers in each load. # Which is why I divided the follower_count by 10 and ceiled it. scroll_count = (follower_count / 10.0).ceil scroll_count.times do browser.send_keys :control, :end sleep(0.7) end # What is left to do is just to get the followers list. browser.as.each do |follower| followers &amp;lt;&amp;lt; follower.title if follower.title != &quot;&quot; end But as you see this is really time consuming. Another approach to this ‚Äúscrolling down‚Äù stuff came from a user on the SO. I loved his approach and wanted to note it somewhere as to what exactly it does but I guess I‚Äôve written a liiiittle bit too much. :)So, here it is:scrollable = browser.div(class: &#39;j6cq2&#39;) # div with overflow-y=scrolluntil browser.execute_script(&#39;return arguments[0].scrollTop + arguments[0].clientHeight &amp;gt;= arguments[0].scrollHeight&#39;, scrollable) do browser.execute_script(&#39;arguments[0].scrollTop = arguments[0].scrollHeight&#39;, scrollable) sleep(1)endWhat do all these mean?clientHeight is actually the div‚Äôs height which has scrollable content in it which is in this case the blue highlighted area‚Äôs height in our case. scrollTop is the distance in pixels from the top of your content to it‚Äôs top-most visible content. Let me explain this better for you. Take a look at the images below. I am 4 followers down from the top. I can‚Äôt see those 4 followers and the top-most follower (which I can see) is the 5th one. You can also see this in the inspector. There are 4 li elements above and the 4th one is highlighted.Since eachli element‚Äôs height is 54 pixels, our scrollTop would return 216 pixels which you can check like below in the picture.scrollHeight is the total content height of the scrollable div. Above picture shows how to find out all the three measurements and we had already calculated them. In this case I needed the class‚Äô name for the div with the scrollable content.So you can now figure out how the above code works. Until scrollTop + clientHeight = scrollHeight it keeps assigning scrollHeight to scrollTop which causes page to scroll down." }, { "title": "System calls in C", "url": "/posts/system-calls-in-c/", "categories": "TIL, C", "tags": "c, system-calls", "date": "2018-08-05 00:00:00 +0200", "snippet": "A system call is a request for service that a program makes of the kernel. An example to that would be the system() function.1int system(const char* command);Returns -1 on error or the return status of the command otherwise.But since this function would run any command given to it as a string you would probably like to use something specific like exec() functions.1. exec() FunctionsUsing exec() functions you can remove the ambiguity of which program to run by telling the operating system precisely which program to run.Basically there are two types of exec() functions. List functions and array functions. exec() functions are in unistd.h library.NOTE: Since exec() functions replace the current process. After you call the exec() function somewhere in your code, the code below won‚Äôt be executed because of the aforementioned reason. You may want to search for the fork() function for that, which I am not going to talk about in this article.1.1 List Functions: execl(), execlp(), execle()When using list functions you just pass the arguments for the command to be executed to your function as a list of strings.Take the code below for example,execl(&quot;/bin/echo&quot;,&quot;/bin/echo&quot;,&quot;here&quot;,&quot;is&quot;,&quot;a&quot;,&quot;list&quot;,NULL);Let‚Äôs take a look at what those other letters in the function name mean. Letter Meaning l list p path, which tells the function that the command is in the path so you don‚Äôt need to specify its path e environment, you can also pass some environment variables execlp(&quot;echo&quot;,&quot;echo&quot;,&quot;this function is on the path&quot;,NULL);Simple example using environment variablesHere is a simple example just to demonstrate how to use environment variables.Below is the program with which we are going to execute another program using execle() with some environment variables.//caller.c compiled to caller#include &amp;lt;unistd.h&amp;gt;int main(){ char* env[] = {&quot;PATH=/some/path&quot;,&quot;VERSION=1.0&quot;, NULL}; execle(&quot;./toBeExecuted&quot;,&quot;./toBeExecuted&quot;,&quot;some parameter&quot;,NULL,env);}Here is the program which will use the environment variables sent//toBeExecuted.c compiled to toBeExecuted#include &amp;lt;stdio.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt;int main(int argc, char* argv[]) { printf(&quot;Version of the program: %s\\n&quot;,getenv(&quot;VERSION&quot;)); return 0; }After doing ./caller the output will be Version of the program: 1.0.1.2 Array Functions: execv(), execvp(), execve()While using these functions you don‚Äôt pass the parameters as a list, you just pass all the parameters in an array instead. Except that the usage is the same as execl() functions. Letter Meaning v stands for vector p path e environment variables char* args[] = {&quot;echo&quot;,&quot;here&quot;,&quot;are&quot;,&quot;the arguments&quot;,NULL}; execvp(args[0],args);//or if your program is not on the PATHchar* notOnPath[] = {&quot;/bin/echo&quot;,&quot;here&quot;,&quot;are&quot;,&quot;the arguments&quot;,NULL}; execv(notOnPath[0],notOnPath);There are two things I want to point: You should always end your parameter list or array with a NULL at the end. When calling an exec() function the second parameter should be the same as the program name you are calling, you can check the examples above. I have found some questions on SO about that but I couldn‚Äôt really get it. Maybe one day I will. Why do we have to pass the file name twice in exec functions? Is ‚Äúargv[0] = name-of-executable‚Äù an accepted standard or just a common convention?" }, { "title": "Wi-Fi controlled RC car using ESP8266-01", "url": "/posts/wifi-controlled-rc-car-using-esp8266/", "categories": "Projects, Arduino", "tags": "arduino, esp8266, iot, websockets", "date": "2018-06-19 00:00:00 +0200", "snippet": "Here I will be documenting my Arduino project about a Wi-Fi controlled (ESP8266-01) RC car using WebSocket protocol that I‚Äôve been working on literally for months. Actually not have been working on but instead have had in mind for months would be more appropriate to say since I didn‚Äôt really have time to completely focus on it so far and moreover with a tight budget you can‚Äôt really buy everything you need at once. Also a misplaced capacitor between the 3.3V regulator and ESP8266 took me three days to figure out why my ESP8266 was not working properly but in the meantime I‚Äôd already ordered a new NodeMCU one. *facepalm*What are the components I‚Äôve used for the project? An Arduino UNO (obviously) An ESP8266-01 An L298N motor driver An LF33CV 3.3V regulator An RC car Also batteries that meet your needsWiring Diagram Wiring diagram of all components.NOTE: Since I don‚Äôt have a proper battery -thanks to LiPo batteries and their even more expensive chargers-, I‚Äôve used 3 9V batteries to source the circuit just to test it on its own but the power was not enough. I also think that it was because the front wheels are controlled by a DC motor instead of a servo motor so if you want your car to turn left, your front DC motor would always be on which will always draw current.So that, I‚Äôve just wired a 9V 850mA adapter as my source and had no problems driving the car around as long as its cable let me of course :).What is WebSocket Protocol? WebSockets are a bi-directional, full-duplex, persistent connection from a web browser to a server. Once a WebSocket connection is established the connection stays open until the client or server decides to close this connection. With this open connection, the client or server can send a message at any given time to the other.1How is all this going to be working?After making all the wire connections we are going to create a small website where we will be checking for keystrokes to control the RC car using our arrow keys. We will be sending those keystrokes as commands using JavaScript.Actually I would like to control my RC car using my gamepad and adjust the car‚Äôs speed using its analogue sticks with a code written in C or C++ using the same protocol but somehow my gamepad stopped working. Therefore, until I get a new one I will be using arrow keys and a constant speed for the motor. Of course once I get the gamepad and have time for it I will also try controlling the car with the gamepad and with other protocols like HTTP or UDP to see the difference, if any.About how I send the commands exactly, I just send a two digit number representing the motion of the car and also the direction of its wheels every time an arrow key is pressed and released. When the key is released we will be sending commands to stop whatever motion was triggered by the released key. The tens digit of the number represents the steering wheel, e.g.:1: Left,2: Straight,3: RightOnes digit of the number will be representing the movement of the car and its direction, e.g.:1: Backwards,2: Stop,3: ForwardsSo for example, 21 would represent ‚Äúgo straight backwards‚Äù in this case and 13 would represent ‚Äúgo left forwards‚Äù.Creating the JavaScript FileHere I will be explaining the codes in my app.js file.var movement = 2; // 1: BACKWARDS, 2: STOP 3: FORWARDSvar wheelDirection = 1; // 0: LEFT, 1: STRAIGHT, 2: RIGHTAbove we are declaring our variables which we will be assigning different values according to keystrokes we‚Äôve read and then send them to our Arduino using WebSocket Protocol.document.onkeydown = checkKeyDown; //the function which is invoked on keydowndocument.onkeyup = checkKeyUp; //the function which is invoked on keyupDefining our keydown and keyup functions.//Creating a new connectionvar connection = new WebSocket(&#39;ws://192.168.4.1:81/&#39;, [&#39;arduino&#39;]);connection.onerror = function (error) { console.log(&#39;WebSocket Error &#39;, error);};connection.onmessage = function (e) { console.log(&#39;Server: &#39;, e.data);};connection.onclose = function () { console.log(&#39;WebSocket connection closed&#39;);};We are going to connect to the server at ws://192.168.4.1 on the port 81 with a protocol named arduino.On error, we log error to the console.On lost connection or closed connection, WebSocket connection closed. logged to the console.On message from the server we again log it to the console.function checkKeyDown(e) { //When the key is pressed e = e || window.event; if (e.keyCode == &#39;38&#39;) { // up arrow movement = 2; console.log(&quot;forward&quot;); } else if (e.keyCode == &#39;40&#39;) { // down arrow movement = 0; console.log(&quot;down&quot;); } else if (e.keyCode == &#39;37&#39;) { // left arrow wheelDirection = 1; console.log(&quot;left&quot;); } else if (e.keyCode == &#39;39&#39;) { // right arrow wheelDirection = 3; console.log(&quot;right&quot;); } var sum = (wheelDirection*10)+movement; connection.send(sum.toString()); console.log(&quot;sum: &quot;+sum);}Here we are defining our checkKeyDown function. What we are doing is simply checking the keystrokes whether they are one of the arrow keys, if so, we are assigning the variables the above specified values accordingly.At the end we are summing the two values wheelDirection and movement then we are sending the sum to the server and also logging it to the console.function checkKeyUp(e) { //When the key is released e = e || window.event; if (e.keyCode == &#39;38&#39;) { // up arrow movement = 1; console.log(&quot;stop forward&quot;); } else if (e.keyCode == &#39;40&#39;) { // down arrow movement = 1; console.log(&quot;stop backwards&quot;); } else if (e.keyCode == &#39;37&#39;) { // left arrow wheelDirection = 2; console.log(&quot;stop left&quot;); } else if (e.keyCode == &#39;39&#39;) { // right arrow wheelDirection = 2; console.log(&quot;stop right&quot;); } var sum = (wheelDirection*10)+movement; //Summing the commands as mentioned. connection.send(sum.toString()); //Sending the number or command so to speak. console.log(&quot;sum: &quot;+sum);}This is the same process as checkKeyDown function. The only difference is that this function sends stop signals after a key is released.Complete JavaScript File//app.jsdocument.onkeydown = checkKeyDown; //the function which is invoked on keydowndocument.onkeyup = checkKeyUp; //the function which is invoked on keyup//Creating a new connectionvar connection = new WebSocket(&#39;ws://192.168.4.1:81/&#39;, [&#39;arduino&#39;]);connection.onerror = function (error) { console.log(&#39;WebSocket Error &#39;, error);};connection.onmessage = function (e) { console.log(&#39;Server: &#39;, e.data);};connection.onclose = function () { console.log(&#39;WebSocket connection closed&#39;);};var movement = 2; // 1: BACKWARDS, 2: STOP 3: FORWARDSvar wheelDirection = 1; // 0: LEFT, 1: STRAIGHT, 2: RIGHTfunction checkKeyDown(e) { //When the key is pressed e = e || window.event; if (e.keyCode == &#39;38&#39;) { // up arrow movement = 2; console.log(&quot;forward&quot;); } else if (e.keyCode == &#39;40&#39;) { // down arrow movement = 0; console.log(&quot;down&quot;); } else if (e.keyCode == &#39;37&#39;) { // left arrow wheelDirection = 1; console.log(&quot;left&quot;); } else if (e.keyCode == &#39;39&#39;) { // right arrow wheelDirection = 3; console.log(&quot;right&quot;); } var sum = (wheelDirection*10)+movement; connection.send(sum.toString()); console.log(&quot;sum: &quot;+sum);}function checkKeyUp(e) { //When the key is released e = e || window.event; if (e.keyCode == &#39;38&#39;) { // up arrow movement = 1; console.log(&quot;stop forward&quot;); } else if (e.keyCode == &#39;40&#39;) { // down arrow movement = 1; console.log(&quot;stop backwards&quot;); } else if (e.keyCode == &#39;37&#39;) { // left arrow wheelDirection = 2; console.log(&quot;stop left&quot;); } else if (e.keyCode == &#39;39&#39;) { // right arrow wheelDirection = 2; console.log(&quot;stop right&quot;); } var sum = (wheelDirection*10)+movement; //Summing the commands as mentioned. connection.send(sum.toString()); //Sending the number or command so to speak. console.log(&quot;sum: &quot;+sum);}Creating the HTML FileCreating the index.html is quite easy since we won‚Äôt need any content. Our app.js will do the work, hence we only need to include it with &amp;lt;script&amp;gt; tags.&amp;lt;!--- index.html ---&amp;gt;&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html lang=&quot;en&quot;&amp;gt;&amp;lt;head&amp;gt; &amp;lt;meta charset=&quot;utf-8&quot;&amp;gt; &amp;lt;title&amp;gt;Motor Controller&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt; &amp;lt;!-- Required for the application to work. --&amp;gt; &amp;lt;script type=&quot;text/javascript&quot; src=&quot;app.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;Programming the Arduino UNOProgramming the Ardunio UNO we are just going to need a SoftwareSerial to communicate with the ESP8266-01. You can read the explanations in the code and that should be enough to understand. If not, you can contact me.#include &amp;lt;SoftwareSerial.h&amp;gt;#define BACKWARDS 0#define STOP 1#define FORWARDS 2#define LEFT 1#define STRAIGHT 2#define RIGHT 3SoftwareSerial esp8266(2, 3); //Rx, Tx/* * info will be our int array where we will keep * our commands for motors separately after splitting the command * variable into its digits. * info[0] will be our wheelDirection, info[1] our movement. */int info[2] = {0}; /* This will keep the command coming from the ESP8266 * Which for example could be numbers like 20, 11, 23 */int command;char c;int i;void setup(){ Serial.begin(9600); //For Serial monitor esp8266.begin(9600); //ESP Baud rate /* Don&#39;t make the mistake of using higher baud rates than the ESP8266 or Arduino UNO can handle like I did. Then you may get erroneous bits, hence erroneous commands. */ // Pin outs for the front motor pinMode(13, OUTPUT); pinMode(12, OUTPUT); pinMode(9, OUTPUT); // Pin outs for the rear motor pinMode(7, OUTPUT); pinMode(6, OUTPUT); pinMode(5, OUTPUT); // Front motor output pins&#39; initialization analogWrite(9, 0); digitalWrite(12, LOW); digitalWrite(13, HIGH); // Rear motor output pins&#39; initialization digitalWrite(7, HIGH); digitalWrite(6, LOW); analogWrite(5, 0);}/* A function to split the command into its digits * and set the speed and direction of motors accordingly. */void setSpeed(int newSpeed) { int temp = newSpeed; /* Printing out our command to the serial monitor so that we can check what&#39;s going on. */ Serial.print(&quot;Command: &quot;); Serial.println(temp); /* Here we are splitting the command (the number actually) into its digits. So that we can power the motors according to those digits and their meaning in switch case block. */ i = 0; while (temp) { info[i] = temp % 10; temp /= 10; i++; } // Switch case block for front wheels. switch (info[1]) { case LEFT: analogWrite(9, 150); digitalWrite(12, HIGH); digitalWrite(13, LOW); break; case RIGHT: analogWrite(9, 150); digitalWrite(12, LOW); digitalWrite(13, HIGH); break; case STRAIGHT: analogWrite(9, 0); break; } // Switch case block for rear wheels. switch (info[0]) { case BACKWARDS: analogWrite(5, 150); digitalWrite(6, HIGH); digitalWrite(7, LOW); break; case FORWARDS: analogWrite(5, 150); digitalWrite(6, LOW); digitalWrite(7, HIGH); break; case STOP: analogWrite(5, 0); break; }}void loop(){ /* Here we are checking the number of bytes * available for reading from the serial port. * Then we read that data byte by byte checking * if there is a colon &quot;:&quot;. Because we are sending commands * in a way like &quot;command: 23&quot; so that after a colon * we can try to parse to int what&#39;s in the buffer after &quot;:&quot;. * Which will parse just 2 numbers then stop. * Then we call the setSpeed function. * One last thing is that: * We clear the buffer until there nothing to read at the end of each loop. */ if (esp8266.available() &amp;gt; 0) { c = esp8266.read(); if (c == &#39;:&#39;) { command = esp8266.parseInt(); setSpeed(command); while (esp8266.read() != -1) { //DO NOTHING - to clear the buffer. } } }}Programming the ESP8266-01We are going to use the arduinoWebSockets library by Links2004. Download the library from GitHub and install it. (Sketch &amp;gt; Include Library &amp;gt; Add .ZIP Library‚Ä¶)3#include &amp;lt;ESP8266WiFi.h&amp;gt;#include &amp;lt;WiFiClient.h&amp;gt;#include &amp;lt;WebSocketsServer.h&amp;gt;WebSocketsServer webSocket(81);const char *ssid = &quot;softAPI&quot;; // You will connect your phone to this Access Pointconst char *pw = &quot;thereisnospoon&quot;; // and this is the passwordIPAddress ip(192, 168, 4, 1);IPAddress netmask(255, 255, 255, 0);void startWebSocket() { // Start a WebSocket server webSocket.begin(); // start the websocket server webSocket.onEvent(webSocketEvent); // if there&#39;s an incomming websocket message, go to function &#39;webSocketEvent&#39; Serial.println(&quot;WebSocket server started.&quot;);}void webSocketEvent(uint8_t num, WStype_t type, uint8_t * payload, size_t lenght) { // When a WebSocket message is received switch (type) { case WStype_DISCONNECTED: // if the websocket is disconnected Serial.printf(&quot;[%u] Disconnected!\\n&quot;, num); break; case WStype_CONNECTED: { // if a new websocket connection is established IPAddress ip = webSocket.remoteIP(num); if ( payload != NULL) { Serial.printf(&quot;[%u] Connected from %d.%d.%d.%d url: %s\\n&quot;, num, ip[0], ip[1], ip[2], ip[3], payload); } } break; case WStype_TEXT: // if new text data is received, if (payload != NULL) { // I used an if statement here for the payload because when the payload was NULL, I was getting some weird errors from the ESP8266 and the device was resetting itself. Serial.printf(&quot;[%u] command: %s\\n&quot;, num, payload); } break; }}void setup() { Serial.begin(9600); delay(1000); WiFi.softAPConfig(ip, ip, netmask); WiFi.mode(WIFI_AP); WiFi.softAP(ssid, pw); // configure ssid and password for softAP startWebSocket(); Serial.printf(&quot;Soft AP created: %s&quot;, WiFi.softAPIP().toString().c_str());}void loop() { webSocket.loop();}VideoLastly, I am leaving this video below so you can see the car in action. But as I mentioned, since I didn‚Äôt have a good battery to power it, it‚Äôs just powered with a 9V 850mA adapter which explains why it is on my desk.References Introduction to WebSockets ESP8266 core for Arduino WebSocket communication by tttapa (I really recommend reading this guide to anyone who is interested in IoT or simply ESP8266)" }, { "title": "Reality is the only thing that is real", "url": "/posts/reality-is-the-only-thing-that-is-real/", "categories": "Movies", "tags": "movies, ready player one", "date": "2018-05-08 00:00:00 +0200", "snippet": "I was quited excited after watching the movie ‚ÄúReady Player One‚Äù so I thought this would make a good ‚ÄúHello World‚Äù post.This, I am talking about the title, was the most hitting line of the movie ‚ÄúReady Player One‚Äù for me. In the beginning I didn‚Äôt think I would like this movie this much but then I just saw myself in it.To explain the movie in a nutshell, in the year 2045, a virtual universe called the Oasis becomes the place where most of the humanity feels more alive including our character Wade Watts a.k.a Parzival in the Oasis. Because there is no limit to what you can do in the Oasis. Then one day, the death of the creature of this universe, who is known as Halliday Watson, is announced by himself in a video also mentioning that he has hidden 3 keys in the Oasis all of them together leading the holder to an Easter Egg which is the prize and also giving full control of the Oasis. Parzival and his mates pursue the three keys to reach the egg and to save the Oasis.About why I think I saw myself in the movie and why I said the title was the most hitting line in the movie: is because I used to play online games, actually just a game that was consuming my hours every day for years ending up in reality when you log off. But that game was also the one that I felt myself more alive in just like in the movie, and the one that I had many good memories and friends in, and also the one that inspired me to learn English. So that, I never see those consumed hours as a waste but as an experience.I guess nothing else could‚Äôve been a better ‚ÄúHello World!‚Äù post than this. Lastly, I haven‚Äôt read the book yet but I will start reading as soon as possible.First to the Key!First to the Egg!" } ]
