<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://blog.burakaymakci.com/</id><title>Burak Kaymakci</title><subtitle>Burak Kaymakci's personal blog where he mostly posts about Elixir and other languages he works with.</subtitle> <updated>2022-06-28T02:09:44+02:00</updated> <author> <name>Burak Kaymakci</name> <uri>https://blog.burakaymakci.com/</uri> </author><link rel="self" type="application/atom+xml" href="https://blog.burakaymakci.com/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://blog.burakaymakci.com/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 Burak Kaymakci </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Creating a function with inputs from a file at compile time using Elixir AST</title><link href="https://blog.burakaymakci.com/posts/creating-a-function-with-inputs-from-a-file-at-compile-time-using-elixir-ast/" rel="alternate" type="text/html" title="Creating a function with inputs from a file at compile time using Elixir AST" /><published>2022-06-27T00:00:00+02:00</published> <updated>2022-06-28T02:09:18+02:00</updated> <id>https://blog.burakaymakci.com/posts/creating-a-function-with-inputs-from-a-file-at-compile-time-using-elixir-ast/</id> <content src="https://blog.burakaymakci.com/posts/creating-a-function-with-inputs-from-a-file-at-compile-time-using-elixir-ast/" /> <author> <name>Burak Kaymakci</name> </author> <category term="TIL" /> <category term="Elixir" /> <summary> Let me fill you in on what the problem I was trying to solve was, then we can get to how I’ve solved the problem by creating a function with inputs from a “defaults” file at compile time using Elixir’s Abstract Syntax Tree (AST). We have a CSV file that has some defaults for our business logic, the file barely changes and is not huge. The content of the file is transformed into a list of tuple... </summary> </entry> <entry><title>How do supervisors not crash when one of the children processes crashes</title><link href="https://blog.burakaymakci.com/posts/how-do-supervisors-not-crash-when-linked-process-crashes/" rel="alternate" type="text/html" title="How do supervisors not crash when one of the children processes crashes" /><published>2021-12-13T00:00:00+01:00</published> <updated>2021-12-13T23:02:50+01:00</updated> <id>https://blog.burakaymakci.com/posts/how-do-supervisors-not-crash-when-linked-process-crashes/</id> <content src="https://blog.burakaymakci.com/posts/how-do-supervisors-not-crash-when-linked-process-crashes/" /> <author> <name>Burak Kaymakci</name> </author> <category term="TIL" /> <category term="Elixir" /> <summary> When you start an Agent or GenServer they will be linked to the current process and the current process will crash if the linked Agent or GenServer crashes. However Supervisors do not crash even if the child processes that are linked to the supervisor crash. Well, the answer is obvious. Because Supervisors trap the exit signals.source code Assuming that you’ve at least one child spec in your ... </summary> </entry> <entry><title>How Ecto infers field types from a changeset or a schema struct</title><link href="https://blog.burakaymakci.com/posts/how-does-ecto-infer-field-type-from-a-changeset-or-a-schema-struct/" rel="alternate" type="text/html" title="How Ecto infers field types from a changeset or a schema struct" /><published>2021-07-16T00:00:00+02:00</published> <updated>2021-07-16T00:00:00+02:00</updated> <id>https://blog.burakaymakci.com/posts/how-does-ecto-infer-field-type-from-a-changeset-or-a-schema-struct/</id> <content src="https://blog.burakaymakci.com/posts/how-does-ecto-infer-field-type-from-a-changeset-or-a-schema-struct/" /> <author> <name>Burak Kaymakci</name> </author> <category term="TIL" /> <category term="Elixir" /> <summary> I was wondering how Ecto.Changeset.cast/4 function casts attributes from a map into their approriate types in the DB since we do not provide any information about the types explicitly. Turns out that if you are passing a schema struct to cast/4 Ecto uses the __changeset__ function on it to figure out the types of the fields. Otherwise if you are passing an Ecto.Changeset to cast/4 then Ecto us... </summary> </entry> <entry><title>Lazy way to insert debugging code for Elixir in Vim</title><link href="https://blog.burakaymakci.com/posts/elixir-easier-way-to-insert-iex-pry-in-vim/" rel="alternate" type="text/html" title="Lazy way to insert debugging code for Elixir in Vim" /><published>2021-06-29T00:00:00+02:00</published> <updated>2021-06-29T00:00:00+02:00</updated> <id>https://blog.burakaymakci.com/posts/elixir-easier-way-to-insert-iex-pry-in-vim/</id> <content src="https://blog.burakaymakci.com/posts/elixir-easier-way-to-insert-iex-pry-in-vim/" /> <author> <name>Burak Kaymakci</name> </author> <category term="TIL" /> <category term="Vim" /> <summary> When I’m writing Elixir code, I’ve been using require IEx; IEx.pry() a lot to debug my code that it became annoying having to type it all the time again and again. Hence I was thinking about a lazier way to have it inserted there in Vim and of course I was not the only one annoyed with this problem. map ,P Orequire IEx; IEx.pry()&amp;lt;ESC&amp;gt; map ,p orequire IEx; IEx.pry()&amp;lt;ESC&amp;gt; After ins... </summary> </entry> <entry><title>Programming Phoenix 1.4 | How do the websockets connect only on the video page</title><link href="https://blog.burakaymakci.com/posts/programming-phoenix-how-does-websocket-work-only-on-video-page/" rel="alternate" type="text/html" title="Programming Phoenix 1.4 | How do the websockets connect only on the video page" /><published>2021-05-19T00:00:00+02:00</published> <updated>2021-05-19T00:00:00+02:00</updated> <id>https://blog.burakaymakci.com/posts/programming-phoenix-how-does-websocket-work-only-on-video-page/</id> <content src="https://blog.burakaymakci.com/posts/programming-phoenix-how-does-websocket-work-only-on-video-page/" /> <author> <name>Burak Kaymakci</name> </author> <category term="TIL" /> <category term="Elixir" /> <summary> In the book Programming Phoenix 1.4, we are creating a web application where users can annotate YouTube videos and annotations get brodcast by WebSockets to all the users that are on the same video page. We can also see that the browser tries to connect to a socket only on the video page, namely rumbl_web/templates/watch/show.html.eex. The chapter were this topic is covered in the book is the c... </summary> </entry> </feed>
